version: '3.8'

services:
  app: &app
    build:
      dockerfile: .dockerdev/Dockerfile
      args:
        RUBY_VERSION: '3.1.0'
        PG_MAJOR: '14'
        NODE_MAJOR: '16'
        YARN_VERSION: '1.22.17'
        BUNDLER_VERSION: '2.3.6'
    image: example-dev:1.0.0
    environment: &env
      NODE_ENV: ${NODE_ENV:-development}
      RAILS_ENV: ${RAILS_ENV:-development}
      YARN_CACHE_FOLDER: /app/node_modules/.yarn-cache
    tmpfs:
      - /tmp
      - /app/tmp/pids

  backend: &backend
    <<: *app
    stdin_open: true
    tty: true
    volumes:
      - .:/app:cached
      - rails_cache:/app/tmp/cache
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
    environment:
      <<: *env
      REDIS_URL: redis://redis:6379/
      DATABASE_URL: postgres://postgres:postgres@postgres:5432
      BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
      WEBPACKER_DEV_SERVER_HOST: webpacker
      WEB_CONCURRENCY: 1
      HISTFILE: /app/log/.bash_history
      PSQL_HISTFILE: /app/log/.psql_history
      EDITOR: vi
    depends_on:
      postgres:
        condition: service_healthy

  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3000:3000'
      - '3002:3002'

  rails:
    <<: *backend
    command: rails server -b 0.0.0.0
    ports:
      - '3000:3000'

  postgres:
    image: postgres:14
    volumes:
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

volumes:
  postgres:
  bundle:
  node_modules:
  rails_cache:
  packs:
